// <auto-generated />
using System;
using Catalog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Catalog.Data.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    [Migration("20240918133954_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Catalog.Domain.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("56efbf6a-5501-4372-a646-55d7f9e257a9"),
                            Name = "Smart Phone",
                            ProductIds = "[\"5334c996-8457-4cf0-815c-ed2b77c4ff61\",\"c67d6323-e8b1-4bdf-9a75-b0d0d2e7e914\",\"b786103d-c621-4f5a-b498-23452610f88c\"]"
                        },
                        new
                        {
                            Id = new Guid("bb038599-cb6b-4d3c-96ed-442d655671a7"),
                            Name = "White Appliances",
                            ProductIds = "[\"4f136e9f-ff8c-4c1f-9a33-d12f689bdab8\",\"6ec1297b-ec0a-4aa1-be25-6726e3b51a27\"]"
                        },
                        new
                        {
                            Id = new Guid("80d73b9b-4597-4eab-8fe1-831ce1516b44"),
                            Name = "Home Kitchen",
                            ProductIds = "[\"c4bbc4a2-4555-45d8-97cc-2a99b2167bff\"]"
                        },
                        new
                        {
                            Id = new Guid("c893511c-5c55-4f84-8ff4-5b2abf8912cb"),
                            Name = "Camera",
                            ProductIds = "[\"93170c85-7795-489c-8e8f-7dcf3b4f4188\"]"
                        });
                });

            modelBuilder.Entity("Catalog.Domain.CategoryProduct", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("CategoryProducts");
                });

            modelBuilder.Entity("Catalog.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5334c996-8457-4cf0-815c-ed2b77c4ff61"),
                            CategoryIds = "[\"56efbf6a-5501-4372-a646-55d7f9e257a9\"]",
                            Description = "This phone is the company's biggest change to its flagship smartphone in years. It includes a borderless.",
                            Image = "product-1.png",
                            Name = "IPhone X",
                            Price = 950.00m
                        },
                        new
                        {
                            Id = new Guid("c67d6323-e8b1-4bdf-9a75-b0d0d2e7e914"),
                            CategoryIds = "[\"56efbf6a-5501-4372-a646-55d7f9e257a9\"]",
                            Description = "This phone is the company's biggest change to its flagship smartphone in years. It includes a borderless.",
                            Image = "product-2.png",
                            Name = "Samsung 10",
                            Price = 840.00m
                        },
                        new
                        {
                            Id = new Guid("4f136e9f-ff8c-4c1f-9a33-d12f689bdab8"),
                            CategoryIds = "[\"bb038599-cb6b-4d3c-96ed-442d655671a7\"]",
                            Description = "This phone is the company's biggest change to its flagship smartphone in years. It includes a borderless.",
                            Image = "product-3.png",
                            Name = "Huawei Plus",
                            Price = 650.00m
                        },
                        new
                        {
                            Id = new Guid("6ec1297b-ec0a-4aa1-be25-6726e3b51a27"),
                            CategoryIds = "[\"bb038599-cb6b-4d3c-96ed-442d655671a7\"]",
                            Description = "This phone is the company's biggest change to its flagship smartphone in years. It includes a borderless.",
                            Image = "product-4.png",
                            Name = "Xiaomi Mi 9",
                            Price = 470.00m
                        },
                        new
                        {
                            Id = new Guid("b786103d-c621-4f5a-b498-23452610f88c"),
                            CategoryIds = "[\"56efbf6a-5501-4372-a646-55d7f9e257a9\"]",
                            Description = "This phone is the company's biggest change to its flagship smartphone in years. It includes a borderless.",
                            Image = "product-5.png",
                            Name = "HTC U11+ Plus",
                            Price = 380.00m
                        },
                        new
                        {
                            Id = new Guid("c4bbc4a2-4555-45d8-97cc-2a99b2167bff"),
                            CategoryIds = "[\"80d73b9b-4597-4eab-8fe1-831ce1516b44\"]",
                            Description = "This phone is the company's biggest change to its flagship smartphone in years. It includes a borderless.",
                            Image = "product-6.png",
                            Name = "LG G7 ThinQ",
                            Price = 240.00m
                        },
                        new
                        {
                            Id = new Guid("93170c85-7795-489c-8e8f-7dcf3b4f4188"),
                            CategoryIds = "[\"c893511c-5c55-4f84-8ff4-5b2abf8912cb\"]",
                            Description = "This phone is the company's biggest change to its flagship smartphone in years. It includes a borderless.",
                            Image = "product-6.png",
                            Name = "Panasonic Lumix",
                            Price = 240.00m
                        });
                });

            modelBuilder.Entity("Catalog.Domain.CategoryProduct", b =>
                {
                    b.HasOne("Catalog.Domain.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Catalog.Domain.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
